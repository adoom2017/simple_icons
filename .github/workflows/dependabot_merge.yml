name: "Dependabot Automerge - Action"

on:
  pull_request_target:
  workflow_dispatch:

jobs:
  worker:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'workflow_dispatch' && github.actor != 'dependabot[bot]')
    steps:
      - name: Checkout
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v2

      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@v2
        with:
          node-version: "15.x"

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      - name: Update Ubuntu
        run: sudo apt update && sudo apt upgrade -y

      - name: Install dependencies
        run: sudo apt install fonttools && sudo snap install yq

      - name: Get Flutter packages
        run: flutter pub get

      - name: Run build script
        run: bash ./build.sh
        working-directory: ./tool/

      - name: Set Version and Changelog
        run: bash ./set_version.sh
        working-directory: ./tool/

      - name: Varify Flutter yaml version
        run: flutter pub get

      - id: set_var
        run: |
          content=`cat ./vendor/package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Stach changes
        run: git add .

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          git commit -m "ðŸ¤– - update to ${{fromJson(steps.set_var.outputs.packageJson).dependencies.simple-icons-font}}"
          git push https://$USERNAME:$REPO_KEY@github.com/jlnrrg/simple_icons.git $GITHUB_REF
        env:
          REPO_KEY: ${{ secrets.PAT }}
          USERNAME: github-actions

      # - name: Commit changes
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: "ðŸ¤– - update to ${{fromJson(steps.set_var.outputs.packageJson).dependencies.simple-icons-font}}"
      #     branch: ${{ github.head_ref }}
      # token: ${{ github.PAT }}

      # - name: Setup Pub Credentials
      #   run: |
      #     mkdir -p ~/.pub-cache
      #     cat <<EOF > ~/.pub-cache/credentials.json
      #     {
      #       "accessToken": "${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}",
      #       "refreshToken": "${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}",
      #       "tokenEndpoint": "${{ secrets.PUB_DEV_PUBLISH_TOKEN_ENDPOINT }}",
      #       "scopes": ["openid", "https://www.googleapis.com/auth/userinfo.email"],
      #       "expiration": ${{ secrets.PUB_DEV_PUBLISH_EXPIRATION }}
      #     }
      #     EOF

      # - name: Check Publish Warnings
      #   run: flutter pub publish --dry-run

      # - name: Publish Package
      #   run: flutter pub publish -f

      # - name: Commit new changes
      #   run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git commit -am "ðŸ¤– - update to ${{fromJson(steps.set_var.outputs.packageJson).dependencies.simple-icons-font}}"
      #     git push origin master

      # - name: automerge
      #   uses: actions/github-script@0.2.0
      #   with:
      #     script: |
      #       github.pullRequests.createReview({
      #         owner: context.payload.repository.owner.login,
      #         repo: context.payload.repository.name,
      #         pull_number: context.payload.pull_request.number,
      #         event: 'APPROVE'
      #       })
      #       github.pullRequests.merge({
      #         owner: context.payload.repository.owner.login,
      #         repo: context.payload.repository.name,
      #         pull_number: context.payload.pull_request.number
      #       })
      #     github-token: ${{github.token}}
